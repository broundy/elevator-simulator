/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.util.*;
import org.junit.Test;
import static org.junit.Assert.*;

public class ElevatorSimulatorTest {
    @Test public void testAppHasAStartupMessage() {
        ElevatorSimulator classUnderTest = new ElevatorSimulator();
        assertNotNull("app should have a startup message", classUnderTest.getStartupMessage());
    }

    @Test
    public void testNoArgDetaultFloorsAndElevators() {
        ElevatorSimulator classUnderTest = new ElevatorSimulator();
        assertEquals("simulator should have 1 elevator", 1, classUnderTest.getElevators().size());
    }

    @Test
    public void testArgsShouldMatchFloorsAndElevators() {
        int floors = 10;
        int elevators = 2;
        ElevatorSimulator classUnderTest = new ElevatorSimulator(floors, elevators);
        assertEquals("simulator should have correct nuber of elevators", elevators, classUnderTest.getElevators().size());
    }

    @Test
    public void testGetNearestElevator() {
        int floors = 10;
        int elevators = 4;
        ElevatorSimulator classUnderTest = new ElevatorSimulator(floors, elevators);

        Elevator[] elevatorArray = new Elevator[classUnderTest.getElevators().size()];
        elevatorArray = classUnderTest.getElevators().toArray(elevatorArray);
        elevatorArray[0].moveToFloor(2);
        elevatorArray[1].moveToFloor(6);
        elevatorArray[2].moveToFloor(3);
        elevatorArray[3].moveToFloor(7);
        UUID one = elevatorArray[0].getId();
        UUID two = elevatorArray[1].getId();
        UUID three = elevatorArray[2].getId();
        UUID four = elevatorArray[3].getId();

        assertEquals("simulator should have sent the correct elevator", one, classUnderTest.getNearestElevator(1).getId());
        assertEquals("simulator should have sent the correct elevator", two, classUnderTest.getNearestElevator(5).getId());
        assertEquals("simulator should have sent the correct elevator", three, classUnderTest.getNearestElevator(4).getId());
        assertEquals("simulator should have sent the correct elevator", four, classUnderTest.getNearestElevator(8).getId());
    }
}
